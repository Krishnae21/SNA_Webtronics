"""foreign key update

Revision ID: c2b0e4ca7712
Revises: ac9b9bfd9522
Create Date: 2023-07-29 03:23:12.737825

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "c2b0e4ca7712"
down_revision = "ac9b9bfd9522"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column("likes", "reactkey", existing_type=sa.VARCHAR(), nullable=False)
    op.create_foreign_key(None, "likes", "post", ["post_id"], ["id"])
    op.alter_column(
        "post", "posted_username", existing_type=sa.VARCHAR(), nullable=False
    )
    op.alter_column("post", "title", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("post", "body", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "post", "posted_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "post", "posted_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column("post", "body", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("post", "title", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column(
        "post", "posted_username", existing_type=sa.VARCHAR(), nullable=True
    )
    op.drop_constraint(None, "likes", type_="foreignkey")
    op.alter_column("likes", "reactkey", existing_type=sa.VARCHAR(), nullable=True)
    # ### end Alembic commands ###
